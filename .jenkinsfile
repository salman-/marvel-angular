pipeline {
    agent any

    environment {
        CHROME_BIN = "/usr/bin/google-chrome"
        DOCKER_CONFIG = "${env.WORKSPACE}/.docker"
        IMAGE = 'salmanprivatedockerregistery.azurecr.io/marvel-app'
        KANIKO_IMAGE = 'gcr.io/kaniko-project/executor:latest'
        // Define Dockerfile path if different from root
        DOCKERFILE = "${env.WORKSPACE}/Dockerfile"
        // Define build context if different from root (use '.' for root)
        BUILD_CONTEXT = "${env.WORKSPACE}"
    }

    stages {
        stage('Preparation') {
            steps {
                checkout scm
            }
        }
        stage('Install dependencies') {
            steps {
                sh "pwd"
                sh "npm --version"
                sh 'npm install'
                sh 'npm install http-server'
                sh 'npm install @angular/cli'
                sh "./node_modules/.bin/ng version"
            }
        }
        stage('Build') {
            steps {
                sh './node_modules/.bin/ng build'
            }
        }
        stage('Test') {
            steps {
                sh './node_modules/.bin/ng test --watch=false --browsers ChromeHeadless'
            }
        }
        stage('Deploy') {
            steps {
                withCredentials([
                    string(credentialsId: 'AZURE_TENANT_ID', variable: 'AZURE_TENANT_ID'),
                    string(credentialsId: 'AZURE_CLIENT_ID', variable: 'AZURE_CLIENT_ID'),
                    string(credentialsId: 'AZURE_CLIENT_SECRET', variable: 'AZURE_CLIENT_SECRET')
                ]) {
                    sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID'
                    sh 'az acr login --name salmanprivatedockerregistery'

                    // Using Kaniko to build and push the Docker image
                    sh """
                    /kaniko/executor --context ${BUILD_CONTEXT} --dockerfile ${DOCKERFILE} \
                                     --destination ${IMAGE} \
                                     --azure-container-registry-config ${DOCKER_CONFIG}/acr_cred.json
                    """
                }
            }
        }
    }
    post {
        always {
            echo 'This will always run regardless of the build status.'
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
